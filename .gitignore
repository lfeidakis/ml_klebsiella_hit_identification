data/
gv_experiments/outputs
launch.json

ABCD/*
rankings/*
sample_lists/*
klebsiella_resistance_predictions/*
klebsiella_data/*
prefiltering_mae_molformer/*
prefiltering_raw_morgan/*
gv_experiments/finetune*
gv_experiments/finetuning*
gv_experiments/new_training*
compound_lists/*
gv_experiments/training_scripts/train_ResAMR_classifier.textClipping
gv_experiments/models/data_loaders_Giovanni.py
gv_experiments/models/data_loaders_old.py
gv_experiments/models/data_loaders.py
gv_experiments/models/data_utils_versionGiovanni.py
gv_experiments/models/res_vae.py
gv_experiments/models/vae.py
gv_experiments/models/vqvae.py
gv_experiments/training_scripts/DRIAMS_baselines_eval.py
gv_experiments/training_scripts/train_1hotSpecies_ResAMR_classifier.py
gv_experiments/training_scripts/train_JointPCA_LR_classifier.py
gv_experiments/training_scripts/train_recommender_ResAMR.py
gv_experiments/training_scripts/train_ResAMR_classifier_Jan25.py
gv_experiments/training_scripts/train_ResAMR_classifier_leo.py
gv_experiments/training_scripts/train_ResAMR_classifier_single_species_comparison.py
gv_experiments/training_scripts/train_ResAMR_classifier.py
gv_experiments/training_scripts/train_ResMLP_classifier_smiles_loop.py
gv_experiments/training_scripts/train_SplitPCA_LR_classifier.py
gv_experiments/README.md
gv_experiments/requirements.txt

test.py


job.sh
job.sub
*.sh
*.sub
gv_experiments/*.ipynb
gv_experiments/OLD
gv_experiments/experimental_notebooks
.vscode/



# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/
